Although the term "Software Product Line Engineering" is becoming more widely known, there is still uncertaintyamong developers about how it would apply in their own development context. Inthis article we tackle this problem by describing the design and automatedderivation of the product variants of a Software Product Line using an easy to understand, practical example.

One increasing trend in software development is the need to develop multiple, similar software products instead of just a single individualproduct. There are several reasons for this. Products that are being developedfor the international market must be adapted for different legal or culturalenvironments, as well as for different languages, and so must provide adapteduser interfaces. Because of cost and time constraints it is not possible forsoftware developers to develop a new product from scratch for each new customer,and so software reuse must be increased. These types of problems typically occurin portal or embedded applications, e.g. vehicle control applications [Ste04]. SoftwareProduct Line Engineering (SPLE) offers a solution to these not quite new, but increasingly challenging, problems [Cle01].

The basis of SPLE is the explicit modelling of what is common and what differs between product variants. Feature Models [Kan90],[Cza00] are frequently used for this. SPLE also includes the design andmanagement of a variable software architecture and its constituent (software) components.

This article describes how this is done in practice, using the example of a Product Line of meteorological data systems. Using this examplewe will show how a Product Line is designed, and how product variants can be derived automatically.